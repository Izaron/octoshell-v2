== '<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.30.2/js/jquery.tablesorter.min.js"></script> '

== '<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/jquery.tablesorter/2.30.5/css/theme.blue.min.css"></script>'

css:
  .job_metric_low {
    background-color: #ff8080 !important;
  }

  .job_metric_average {
    background-color: #ffff80 !important;
  }

  .job_metric_good {
    background-color: #80ff80 !important;
  }

  .task_state_COMPLETED {
    background-color: #80FF80 !important;
  }

  .task_state_COMPLETING {
    background-color: #FFA580 !important;
  }

  .task_state_CANCELLED {
    background-color: #80EEFF !important;
  }

  .task_state_FAILED {
    background-color: #FF8080 !important;
  }

  .task_state_TIMEOUT {
    background-color: #FF00FF !important;
  }

  .task_state_NODE_FAIL {
    background-color: #BB0000 !important;
  }

h3 = "Job table query interface"

= render "form"

- if @notice
  p style = 'color:#FF0000;' = @notice

div
  h3 ="Results: #{@params[:offset]}..#{@params[:offset].to_i + @shown} of #{@total_count}"
  table id="jobs" class="table table-bordered tablesorter-blue"
    thead
      tr
        td = "job issues"
        td = "job id"
        td = "login"
        td = "partition"
        td = "start time"
        td = "end time"
        td = "state"
        td = "num nodes"
        td = "duration (hours)"
        td = "cores * hours"
        td = "job_size rank"
        td = "cpu load"
        td = "gpu load"
        td = "loadavg (processes)"
        td = "IPC"
        td = "ib_receive (MB)"
        td = "ib_sent (MB)"
    tbody
      - @jobs.each do |job|
        - job_performance = job.get_performance
        - job_ranking = job.get_ranking
        - job_cond = job.get_smart_conditions
        tr
          td
            - if !job_performance[:cpu_user].nil?
              - if job_cond.size() > 0
                - job_cond.each do |cond|
                  = image_tag @pictures.fetch(cond, "other.png"), size: "20", alt: @descr[cond][0], title: @descr[cond][0], style: "margin: 1px"
              - else
                = image_tag "ok.png", size: "20", border: 2
            - else
              p = "no_data"
          td = link_to(job.drms_job_id, job)
          td = job.login
          td = job.partition
          td = job.start_time.strftime('%D %T')
          td = job.end_time.strftime('%D %T')
          td class="task_state_#{job.state}" = job.state
          td = job.num_nodes
          td = number_with_precision(job.get_duration_hours, :precision => 1)

          td = number_with_precision(job.get_cpuh, :precision => 1)

          td = "ðŸŽ–" * Math.log(job.num_nodes * (job.end_time - job.start_time) / 86400 + 2, 2).to_i

          td class="job_metric_#{job_ranking[:cpu_user]}" = number_with_precision(job_performance[:cpu_user], :precision => 1)

          td class="job_metric_#{job_ranking[:gpu_load]}" = number_with_precision(job_performance[:gpu_load], :precision => 1)

          td class="job_metric_#{job_ranking[:loadavg]}" = number_with_precision(job_performance[:loadavg], :precision => 1)

          td class="job_metric_#{job_ranking[:ipc]}" = number_with_precision(job_performance[:ipc] && job_performance[:ipc], :precision => 2)

          td class="job_metric_#{job_ranking[:ib_rcv_data]}" = number_with_precision(job_performance[:ib_rcv_data], :precision => 1)

          td class="job_metric_#{job_ranking[:ib_xmit_data]}" = number_with_precision(job_performance[:ib_xmit_data], :precision => 1)

table
  tr
    td
      - if @params[:offset].to_i >= @PER_PAGE
        a href="#{url_for @params.except(:offset).merge(offset: @params[:offset].to_i - @PER_PAGE)}" <<< prev
    td width="10px"
    td
      - if @jobs.length == 100
        a href="#{url_for @params.except(:offset).merge(offset: @params[:offset].to_i + @PER_PAGE)}" next >>>

javascript:
  $(document).ready(function(){
    $("table").tablesorter();
  });
